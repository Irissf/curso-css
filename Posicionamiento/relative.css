/*
    La propiedad position nos permite posicionar los elementos. Hay algunos conceptos 
    que debemos conocer para entender position.

    Flujo de renderizado => Por norma general los elementos se dibujan de izquierda a 
    derecha y de arriba a abajo. el punto 0,0 de los elementos, por norma general, es la
    esquina superior izquierda.

    Espacio reservado -> Es el espacio que tiene un elemento asignado en el navegador.

    Elemento posicionado -> Esto significa que el elemento tiene la propiedad position 
    con un valor distinto de 'static', que es el valor que tiene esta propiedad por de-
    fecto.

    Stackin context -> Contexto de apilamiento. Es el orden en que se apilarán las cajas 
    que se superponen, dentro del mismo contenedor.

    Al posicionar un elemento se habilitan 5 propiedades que podemos utilizar para mover 
    los elementos en los 3 ejes.
        
        top -> El elemento se moverá desde la parte superior la distacia que le hayamos 
        indicado.

        right -> El elemento se moverá desde la parate derecha la distancia quele hayamos
        indicado.

        botton -> El elemento se moverá desde la parte inferior la distancia que le hayamos
        indicado.

        left -> El elemento se moverá desde la parte izquierda la distancia que le hayamos
        indicado.

        z-index -> Nos permite mover el elemento en el contexto de apilamiento (eje z)

        NOTA: Si a un elemento le declaramos  la propiedad top y/o left, las propiedades 
        botton y/o right no funcionan.
    
    Los posibles valores que le podemos dar a position son:

        Static -> Es el valor que tiene por defecto un elemento, con este valor el elemento
        NO ESTA POSICIONADO y por lo cual no podemos moverlo.

        Relative -> El elemento mantendrá su posición y medidas en el flujo de renderizado
        y mantendrá su espacio reservado. Si lo movemos lo hará usando su posición en el 
        html como punto de referencia.

        Absolute -> El elemento perderá sus medidas y su espacio reservado. Si lo movemos 
        usará el elemento padre posicionado como referencia. Si no tiene ninguno, usará el 
        elemento html de referencia.

        Fixed -> El elemento perderá sus medidas y su espacio reservado. Si lo movemos usará
        el elemento html de referencia, y además se quedará fijo en esa posición aunque hagamos
        scroll.

        Sticky -> Es una mezcla de position relative y fixed. Con este tipo de posicionamiento 
        los valores top, left, botton y right no sirven para mover el elemento, si no para indi-
        carle en qué punto pasará a tener un comportamiento de posicionamiento fixed, hasta 
        llegar a ese punto se comportará como su tuviese relative.

*/

*{
    box-sizing: border-box;   
}
body{
    margin: 0;
    background-color: #333;
}

.box{
    width: 100px;
    height: 100px;
}


.box-1{
    background-color: darkgoldenrod;
    /* aparentemente no movemos nada */
    position: relative;
    /* pero si lo movemos hacia la izquierda, se mueve pero el espacio
    reservado sigue ahi
    */
    left: 100px;

    /* Si la bajasemos 50px, la box uno se meteria detrás de la box-2, eso es puesto que se
    apilan, para eso manejamos los index-z */

}

.box-2{
    background-color: burlywood;
}